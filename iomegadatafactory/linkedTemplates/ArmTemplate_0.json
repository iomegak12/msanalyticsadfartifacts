{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "iomegadatafactory"
		},
		"PracticeRawDataStorageConnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PracticeRawDataStorageConnection'"
		},
		"ProcessedSensorMessagesDLSConnection_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ProcessedSensorMessagesDLSConnection'"
		},
		"PracticeSQLMetastoreConnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PracticeSQLMetastoreConnection'"
		},
		"ProcessedSensorMessagesDWConnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ProcessedSensorMessagesDWConnection'"
		},
		"PracticeKVConnection_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://iomegakv.vault.azure.net/"
		},
		"ProcessedSensorMessagesDLSConnection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://iomegadls.dfs.core.windows.net"
		},
		"BlobPathProcessorFunctionConnection_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://blobpathprocessor20200916145509.azurewebsites.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PracticeKVConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('PracticeKVConnection_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PracticeRawDataStorageConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('PracticeRawDataStorageConnection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedSensorMessagesDLSConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ProcessedSensorMessagesDLSConnection_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ProcessedSensorMessagesDLSConnection_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PracticeSQLMetastoreConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('PracticeSQLMetastoreConnection_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PracticeKVConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqlcredentials"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeKVConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobPathProcessorFunctionConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('BlobPathProcessorFunctionConnection_properties_typeProperties_functionAppUrl')]",
					"functionKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PracticeKVConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "blobprocessoraccesskey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeKVConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SensorMessagesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeRawDataStorageConnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "processedsensormessages"
					},
					"folder": {
						"type": "string",
						"defaultValue": "readings/2020/09/15/12"
					},
					"blobName": {
						"type": "string",
						"defaultValue": "-1884015330_10432f21827f4fc29d0c101189327159_1.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().blobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Plant",
						"type": "String"
					},
					{
						"name": "AverageTemperature",
						"type": "String"
					},
					{
						"name": "AverageHumidity",
						"type": "String"
					},
					{
						"name": "TemperatureDescription",
						"type": "String"
					},
					{
						"name": "ProcessedTime",
						"type": "String"
					},
					{
						"name": "PlantType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeRawDataStorageConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedSensorMessagesDLSDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProcessedSensorMessagesDLSConnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileSystemName": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().fileSystemName",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Plant",
						"type": "String"
					},
					{
						"name": "AverageTemperature",
						"type": "String"
					},
					{
						"name": "AverageHumidity",
						"type": "String"
					},
					{
						"name": "TemperatureDescription",
						"type": "String"
					},
					{
						"name": "ProcessedTime",
						"type": "String"
					},
					{
						"name": "PlantType",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProcessedSensorMessagesDLSConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedSensorMessagesDWConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('ProcessedSensorMessagesDWConnection_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "PracticeKVConnection",
							"type": "LinkedServiceReference"
						},
						"secretName": "sqlcredentials"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeKVConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessableBlobMetadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeSQLMetastoreConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RecordId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RecordDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "BlobId",
						"type": "nvarchar"
					},
					{
						"name": "BlobName",
						"type": "nvarchar"
					},
					{
						"name": "DisplayName",
						"type": "nvarchar"
					},
					{
						"name": "Path",
						"type": "nvarchar"
					},
					{
						"name": "LastModified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Size",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MediaType",
						"type": "nvarchar"
					},
					{
						"name": "IsFolder",
						"type": "bit"
					},
					{
						"name": "ETag",
						"type": "nvarchar"
					},
					{
						"name": "FileLocator",
						"type": "nvarchar"
					},
					{
						"name": "ProcessStatus",
						"type": "nvarchar"
					},
					{
						"name": "DLSTargetLocation",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "BlobMetadata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeSQLMetastoreConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RegionThresholdsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeSQLMetastoreConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "PlantType",
						"type": "nvarchar"
					},
					{
						"name": "MTT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MTH",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RegionThresholds"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PracticeSQLMetastoreConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedSensorMessagesDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProcessedSensorMessagesDWConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Plant",
						"type": "nvarchar"
					},
					{
						"name": "Temperature",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Humidity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "RecordedTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "PlantType",
						"type": "nvarchar"
					},
					{
						"name": "TempProcessStatus",
						"type": "nvarchar"
					},
					{
						"name": "HumidityProcessStatus",
						"type": "nvarchar"
					},
					{
						"name": "PlantStatus",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ProcessedSensorMessages"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ProcessedSensorMessagesDWConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SensorTelemetryBlobProcessor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Processable Bobs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[uspGetProcessableBlobs]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ProcessableBlobMetadata",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Iterate Processable Blobs",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Processable Bobs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Processable Bobs').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Blob Path",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "blobPath",
										"value": {
											"value": "@{item().Path}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Blob Name",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "blobName",
										"value": {
											"value": "@{item().BlobName}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute Blob Path Processor",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Set Blob Path",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Blob Name",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "BlobPathProcessor",
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@json(concat('{\"blobPath\":\"', variables('blobPath'), '\", \"blobName\":\"', variables('blobName'), '\"}'))",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "BlobPathProcessorFunctionConnection",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Copy Data to DLS",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Execute Blob Path Processor",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Region",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Region"
													}
												},
												{
													"source": {
														"name": "Plant",
														"type": "String"
													},
													"sink": {
														"name": "Plant"
													}
												},
												{
													"source": {
														"name": "AverageTemperature",
														"type": "Int32"
													},
													"sink": {
														"name": "AverageTemperature"
													}
												},
												{
													"source": {
														"name": "AverageHumidity",
														"type": "Int32"
													},
													"sink": {
														"name": "AverageHumidity"
													}
												},
												{
													"source": {
														"name": "TemperatureDescription",
														"type": "String"
													},
													"sink": {
														"name": "TemperatureDescription"
													}
												},
												{
													"source": {
														"name": "ProcessedTime",
														"type": "String"
													},
													"sink": {
														"name": "ProcessedTime"
													}
												},
												{
													"source": {
														"name": "PlantType",
														"type": "String"
													},
													"sink": {
														"name": "PlantType"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SensorMessagesCSV",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@activity('Execute Blob Path Processor').output.containerName",
													"type": "Expression"
												},
												"folder": {
													"value": "@activity('Execute Blob Path Processor').output.path",
													"type": "Expression"
												},
												"blobName": {
													"value": "@activity('Execute Blob Path Processor').output.blobName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ProcessedSensorMessagesDLSDataset",
											"type": "DatasetReference",
											"parameters": {
												"fileSystemName": "sensordata",
												"folder": {
													"value": "@activity('Execute Blob Path Processor').output.path",
													"type": "Expression"
												},
												"fileName": {
													"value": "@activity('Execute Blob Path Processor').output.blobName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Blob Metastore",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Copy Data to DLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[uspUpdateBlobMetadata]",
										"storedProcedureParameters": {
											"dlsLocation": {
												"value": {
													"value": "@concat('sensordata', '/', activity('Execute Blob Path Processor').output.path, '/', activity('Execute Blob Path Processor').output.blobName)",
													"type": "Expression"
												},
												"type": "String"
											},
											"recordId": {
												"value": {
													"value": "@item().RecordId",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "PracticeSQLMetastoreConnection",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"variables": {
					"blobPath": {
						"type": "String"
					},
					"blobName": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ProcessableBlobMetadata')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobPathProcessorFunctionConnection')]",
				"[concat(variables('factoryId'), '/datasets/SensorMessagesCSV')]",
				"[concat(variables('factoryId'), '/datasets/ProcessedSensorMessagesDLSDataset')]",
				"[concat(variables('factoryId'), '/linkedServices/PracticeSQLMetastoreConnection')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PrepareProcessedSensorMessagesDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SensorMessagesCSV",
								"type": "DatasetReference"
							},
							"name": "ReadSensorMessagesBlob"
						},
						{
							"dataset": {
								"referenceName": "RegionThresholdsDataset",
								"type": "DatasetReference"
							},
							"name": "RegionThresholdsDS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ProcessedSensorMessagesDataset",
								"type": "DatasetReference"
							},
							"name": "OutputToDW"
						}
					],
					"transformations": [
						{
							"name": "LookupMaxTempHumiThreshold"
						},
						{
							"name": "SelectPrimaryColumns"
						},
						{
							"name": "PrepareTempProcessStatus"
						},
						{
							"name": "PreparePlantStatus"
						}
					],
					"script": "source(output(\n\t\tRegion as string,\n\t\tPlant as string,\n\t\tAverageTemperature as integer,\n\t\tAverageHumidity as integer,\n\t\tTemperatureDescription as string,\n\t\tProcessedTime as timestamp,\n\t\tPlantType as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> ReadSensorMessagesBlob\nsource(output(\n\t\tRegion as string,\n\t\tPlantType as string,\n\t\tMTT as integer,\n\t\tMTH as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RegionThresholdsDS\nReadSensorMessagesBlob, RegionThresholdsDS lookup(ReadSensorMessagesBlob@Region == RegionThresholdsDS@Region\n\t&& ReadSensorMessagesBlob@PlantType == RegionThresholdsDS@PlantType,\n\tmultiple: false,\n\tpickup: 'first',\n\tasc(RegionThresholdsDS@Region, true),\n\tasc(RegionThresholdsDS@PlantType, true),\n\tbroadcast: 'right')~> LookupMaxTempHumiThreshold\nLookupMaxTempHumiThreshold select(mapColumn(\n\t\tRegion = ReadSensorMessagesBlob@Region,\n\t\tPlant,\n\t\tAverageTemperature,\n\t\tAverageHumidity,\n\t\tTemperatureDescription,\n\t\tProcessedTime,\n\t\tPlantType = ReadSensorMessagesBlob@PlantType,\n\t\tMTT,\n\t\tMTH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPrimaryColumns\nSelectPrimaryColumns derive(TempProcessStatus = case(AverageTemperature > MTT, \"Warning\", \"Normal\"),\n\t\tHumiProcessStatus = case(AverageHumidity > MTH, \"Warning\", \"Normal\")) ~> PrepareTempProcessStatus\nPrepareTempProcessStatus derive(PlantStatus = case(TempProcessStatus == \"Warning\" && HumiProcessStatus == \"Warning\", \"Critical\", \r\n    TempProcessStatus == \"Warning\" || HumiProcessStatus == \"Warning\", \"Warning\", \"Normal\") ) ~> PreparePlantStatus\nPreparePlantStatus sink(input(\n\t\tRegion as string,\n\t\tPlant as string,\n\t\tTemperature as integer,\n\t\tHumidity as integer,\n\t\tDescription as string,\n\t\tRecordedTime as timestamp,\n\t\tPlantType as string,\n\t\tTempProcessStatus as string,\n\t\tHumidityProcessStatus as string,\n\t\tPlantStatus as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tRegion,\n\t\tPlant,\n\t\tTemperature = AverageTemperature,\n\t\tHumidity = AverageHumidity,\n\t\tDescription = TemperatureDescription,\n\t\tRecordedTime = ProcessedTime,\n\t\tPlantType,\n\t\tTempProcessStatus,\n\t\tHumidityProcessStatus = HumiProcessStatus,\n\t\tPlantStatus\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OutputToDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SensorMessagesCSV')]",
				"[concat(variables('factoryId'), '/datasets/RegionThresholdsDataset')]",
				"[concat(variables('factoryId'), '/datasets/ProcessedSensorMessagesDataset')]"
			]
		}
	]
}