{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "iomegadatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SensorMessagesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeRawDataStorageConnection",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string",
						"defaultValue": "processedsensormessages"
					},
					"folder": {
						"type": "string",
						"defaultValue": "readings/2020/09/15/12"
					},
					"blobName": {
						"type": "string",
						"defaultValue": "-1884015330_10432f21827f4fc29d0c101189327159_1.csv"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().blobName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Plant",
						"type": "String"
					},
					{
						"name": "AverageTemperature",
						"type": "String"
					},
					{
						"name": "AverageHumidity",
						"type": "String"
					},
					{
						"name": "TemperatureDescription",
						"type": "String"
					},
					{
						"name": "ProcessedTime",
						"type": "String"
					},
					{
						"name": "PlantType",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PrepareProcessedSensorMessagesDF')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SensorMessagesCSV",
								"type": "DatasetReference"
							},
							"name": "ReadSensorMessagesBlob"
						},
						{
							"dataset": {
								"referenceName": "RegionThresholdsDataset",
								"type": "DatasetReference"
							},
							"name": "RegionThresholdsDS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ProcessedSensorMessagesDataset",
								"type": "DatasetReference"
							},
							"name": "OutputToDW"
						}
					],
					"transformations": [
						{
							"name": "LookupMaxTempHumiThreshold"
						},
						{
							"name": "SelectPrimaryColumns"
						},
						{
							"name": "PrepareTempProcessStatus"
						},
						{
							"name": "PreparePlantStatus"
						}
					],
					"script": "source(output(\n\t\tRegion as string,\n\t\tPlant as string,\n\t\tAverageTemperature as integer,\n\t\tAverageHumidity as integer,\n\t\tTemperatureDescription as string,\n\t\tProcessedTime as timestamp,\n\t\tPlantType as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false) ~> ReadSensorMessagesBlob\nsource(output(\n\t\tRegion as string,\n\t\tPlantType as string,\n\t\tMTT as integer,\n\t\tMTH as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RegionThresholdsDS\nReadSensorMessagesBlob, RegionThresholdsDS lookup(ReadSensorMessagesBlob@Region == RegionThresholdsDS@Region\n\t&& ReadSensorMessagesBlob@PlantType == RegionThresholdsDS@PlantType,\n\tmultiple: false,\n\tpickup: 'first',\n\tasc(RegionThresholdsDS@Region, true),\n\tasc(RegionThresholdsDS@PlantType, true),\n\tbroadcast: 'right')~> LookupMaxTempHumiThreshold\nLookupMaxTempHumiThreshold select(mapColumn(\n\t\tRegion = ReadSensorMessagesBlob@Region,\n\t\tPlant,\n\t\tAverageTemperature,\n\t\tAverageHumidity,\n\t\tTemperatureDescription,\n\t\tProcessedTime,\n\t\tPlantType = ReadSensorMessagesBlob@PlantType,\n\t\tMTT,\n\t\tMTH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPrimaryColumns\nSelectPrimaryColumns derive(TempProcessStatus = case(AverageTemperature > MTT, \"Warning\", \"Normal\"),\n\t\tHumiProcessStatus = case(AverageHumidity > MTH, \"Warning\", \"Normal\")) ~> PrepareTempProcessStatus\nPrepareTempProcessStatus derive(PlantStatus = case(TempProcessStatus == \"Warning\" && HumiProcessStatus == \"Warning\", \"Critical\", \r\n    TempProcessStatus == \"Warning\" || HumiProcessStatus == \"Warning\", \"Warning\", \"Normal\") ) ~> PreparePlantStatus\nPreparePlantStatus sink(input(\n\t\tRegion as string,\n\t\tPlant as string,\n\t\tTemperature as integer,\n\t\tHumidity as integer,\n\t\tDescription as string,\n\t\tRecordedTime as timestamp,\n\t\tPlantType as string,\n\t\tTempProcessStatus as string,\n\t\tHumidityProcessStatus as string,\n\t\tPlantStatus as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tmapColumn(\n\t\tRegion,\n\t\tPlant,\n\t\tTemperature = AverageTemperature,\n\t\tHumidity = AverageHumidity,\n\t\tDescription = TemperatureDescription,\n\t\tRecordedTime = ProcessedTime,\n\t\tPlantType,\n\t\tTempProcessStatus,\n\t\tHumidityProcessStatus = HumiProcessStatus,\n\t\tPlantStatus\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OutputToDW"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SensorMessagesCSV')]",
				"[concat(variables('factoryId'), '/datasets/RegionThresholdsDataset')]",
				"[concat(variables('factoryId'), '/datasets/ProcessedSensorMessagesDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RegionThresholdsDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PracticeSQLMetastoreConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "PlantType",
						"type": "nvarchar"
					},
					{
						"name": "MTT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "MTH",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RegionThresholds"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessedSensorMessagesDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ProcessedSensorMessagesDWConnection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Plant",
						"type": "nvarchar"
					},
					{
						"name": "Temperature",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Humidity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "RecordedTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "PlantType",
						"type": "nvarchar"
					},
					{
						"name": "TempProcessStatus",
						"type": "nvarchar"
					},
					{
						"name": "HumidityProcessStatus",
						"type": "nvarchar"
					},
					{
						"name": "PlantStatus",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ProcessedSensorMessages"
				}
			},
			"dependsOn": []
		}
	]
}